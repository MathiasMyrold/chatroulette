{"version":3,"sources":["components/LoginCard/LoginCard.js","containers/Login.js","components/OnlineUsers/OnlineUsers.js","components/Chatbox/Chatbox.js","containers/Chat.js","Routes.js","App.js","index.js"],"names":["LoginCardContainer","styled","div","LoginCard","props","TextField","style","width","marginBottom","label","onChange","onKeyDown","variant","Button","color","onClick","onLogin","LoginContainer","Login","useState","username","setUsername","setAuthState","useContext","AuthContext","history","useHistory","push","e","keyCode","event","target","value","StyledDiv","StyledUsers","input","StyledUserCard","OnlineUsers","users","onUserClick","searchText","setSearchText","placeholder","marginTop","marginLeft","minHeight","filter","user","name","toLowerCase","includes","toLocaleLowerCase","map","id","Container","StyledMessages","fieldset","StyledMessagesPeer","StyledSendMessage","StyledMessageContainer","StyledChat","StyledHeader","h2","checkMessage","message","index","otherUser","myID","you","getUserName","me","setTimeout","document","getElementById","scrollTop","scrollHeight","yours","console","log","otherUserName","forEach","x","chatbox","messages","text","handleChange","sendMessage","Grid","className","container","item","md","background","Chat","setUsers","authState","sendChannel","useRef","socket","peerRef","setText","setMessages","useEffect","current","io","transports","on","emit","romInfo","from","vilSnakke","window","confirm","userID","createPeer","createDataChannel","onopen","handleOnOpen","onmessage","handleReceiveMessage","svar","setRoom","romID","akseptertRom","tilbakeStill","giAvslaattBeskjed","handleOffer","handleAnswer","handleNewICECandidateMsg","toUser","uuid","alert","peer","RTCPeerConnection","iceServers","urls","onicecandidate","handleICECandidateEvent","onnegotiationneeded","createOffer","then","offer","setLocalDescription","payload","caller","sdp","localDescription","catch","handleNegotiationNeededEvent","data","length","send","incoming","ondatachannel","channel","desc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","candidate","RTCIceCandidate","addIceCandidate","Chatbox","exact","path","component","createContext","App","Provider","Routes","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e15d678.chunk.js","sourcesContent":["import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport styled from 'styled-components';\n\n\nconst LoginCardContainer = styled.div`\n  width: 30rem;\n  height: 28rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #fff;\n  padding: 3rem;\n  border-radius: 8px;\n`;\n\nconst LoginCard = props => {\n  return (\n    <LoginCardContainer>\n      <h1>Login</h1>\n      <hr />\n      <TextField\n        style={{ width: '100%', marginBottom: 24 }}\n        label=\"Username\"\n        onChange={props.onChange}\n        onKeyDown={props.onKeyDown}\n        variant=\"outlined\"\n      />\n      <Button\n        style={{ width: '100%' }}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.onLogin}\n      >\n        Enter chat room\n      </Button>\n    </LoginCardContainer>\n  );\n};\n\nexport default LoginCard;\n","import React, {useState, createContext, useContext} from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from \"react-router-dom\";\nimport LoginCard from '../components/LoginCard/LoginCard';\nimport { AuthContext } from '../App';\n\nconst LoginContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n\nconst Login = () => {\n  const [username, setUsername] = useState(''); \n  const {setAuthState} = useContext(AuthContext); \n  const history = useHistory();\n\n  const onChange = (event) => {\n    setUsername(event.target.value);\n  }\n\n  const onLogin = () => {\n    setAuthState({username: username}); \n    history.push('/chat');\n  }\n\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      onLogin();\n    }\n  }\n\n\n  return (\n    <LoginContainer>\n      <LoginCard   onKeyDown={onKeyDown} onLogin = {onLogin} onChange = {onChange}></LoginCard>\n    </LoginContainer>\n  );\n};\n\nexport default Login;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { TextField } from '@material-ui/core';\n\nconst StyledDiv = styled.div`\n  //border-right: ridge grey 1px;\n  max-width: 60%;\n  min-height: 100%;\n  border-radius: 0px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n\n`;\n\nconst StyledSearchBar = styled.input`\n  min-height: 25px;\n  min-width: 250px;\n  display: block;\n  margin: auto;\n  margin-top: 15px;\n  border-radius: 50px;\n`;\n\nconst StyledUsers = styled.div`\n  margin-top: 20px;\n  padding:5px;\n  margin:10px;\n  font-size:25px;\n  \n`;\n\nconst StyledUser = styled.div`\n  background-color: black;\n  width: 100px;\n`;\n\nconst StyledUserCard = styled.div`\n  width: wrap;\n  margin: 4px;\n  padding-left: 5px;\n  user-select: none;\n  &:hover{\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    border-radius:10px;\n  } ;\n  &:active{\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.6);\n    box-shadow: inset 0 0 6px rgba(0,0,0,0.6);\n  }\n`;\n\nconst OnlineUsers = ({users, onUserClick}) => {\n  const [searchText, setSearchText] = useState('')\n  return (\n    <StyledDiv>\n      <TextField\n        onChange = {e => setSearchText(e.target.value)}\n        placeholder=\"Search\"\n        style={{\n          width: '80%',\n          marginTop: '5px',\n          marginLeft: '3px',\n          minHeight: '20px',\n          color: 'white'\n        }}\n      ></TextField>\n      <StyledUsers>\n       <b>Brukerne:</b> <br></br>\n        {users.filter((user) => {\n          if(searchText == \"\"){\n            return user\n          }else if(user.name != null && user.name.toLowerCase().includes(searchText.toLocaleLowerCase())){\n            return user\n          }\n        }).map(user => (\n          <StyledUserCard key={user.id} onClick={() => onUserClick(user)}>{user.name}</StyledUserCard>\n        ))}\n\n      </StyledUsers>\n    </StyledDiv>\n  );\n};\n\nexport default OnlineUsers;\n","import React from 'react';\nimport styled from 'styled-components';\nimport OnlineUsers from '../OnlineUsers/OnlineUsers';\nimport { TextField, Button, Grid } from '@material-ui/core';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n`;\n\nconst StyledOwnMessages = styled.div`\n  position: right;\n  width: 70%;\n  height: relative;\n  background-color: white;\n  margin: 3px;\n`;\n\nconst StyledMessages = styled.fieldset`\n  position: left;\n  float:right;\n  width: 50%;\n  height: relative;\n  padding: 5px;\n  background-color: none;\n  margin: 3px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n`;\n\nconst StyledMessagesPeer = styled.fieldset`\n  position: left;\n  float:left;\n  width: 50%;\n  height: relative;\n  padding: 5px;\n  background-color: blue;\n  margin: 3px;\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n`; \n\nconst StyledSendMessage = styled.div``;\nconst StyledLable = styled.div`\n  font-size: small;\n  \n`;\n\nconst StyledMessageContainer = styled.div`\n  color: white;\n  width: 100%;\n  \n  height: 40vh;\n  overflow: hidden;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    width: 20px;\n  }\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-thumb {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n  }\n  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n`;\n\nconst StyledChat = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 80%;\n  padding: 3rem;\n\n\n`;\n\nconst StyledHeader = styled.h2`\n  text-align: left;\n  margin: 0px;\n  color: white;\n`;\n\n\nfunction checkMessage(message, index, users, otherUser, myID){\n    let you = getUserName(users, otherUser)\n    let me = getUserName(users, myID)\n    pushDownScrollbar()\n    if(message.yours) {\n      console.log(\"min melding\")\n      return (\n        <StyledMessages key={index}>\n         <legend>{me}</legend>{message.value}\n        </StyledMessages>\n    )\n    } else {\n      return (\n          <StyledMessagesPeer key = {index}>\n            <legend>{you}</legend>{message.value}\n          </StyledMessagesPeer>\n      )\n    }\n  }\n\nfunction getUserName(users,id){\n  let otherUserName = '';\n  users.forEach(x => {\n    if(x.id == id){\n        otherUserName = x.name;\n    }\n  })\n  return otherUserName;\n}\n\nfunction pushDownScrollbar(){\n  setTimeout(() => {\n        document.getElementById(\"hei\").scrollTop = document.getElementById(\"hei\").scrollHeight \n      }, 1);\n}\n\n\nconst chatbox = ({users, messages, text, onUserClick, handleChange, sendMessage, onKeyDown, otherUser,myID}) => {\n  return (\n    <Container>\n      <Grid className=\"h100\" container>\n        <Grid item md={4}>\n          <OnlineUsers users={users} onUserClick={user => onUserClick(user)} />\n        </Grid>\n        <Grid item md={8}>\n          <StyledChat>\n            <StyledHeader>\n              <p>Du snakker med {getUserName(users, otherUser)}</p>\n            </StyledHeader>\n            <StyledMessageContainer id=\"hei\">\n              {messages.map((message, index) => (\n                checkMessage(message, index, users, otherUser, myID)\n              ))\n              }\n            </StyledMessageContainer>\n            <StyledSendMessage>\n              <TextField\n                style={{ width: '100%', marginBottom: 24, background: '#fff' }}\n                label=\"ENTER MESSAGE\"\n                variant=\"outlined\"\n                value = {text}\n                onChange = {handleChange}\n                onKeyDown = {onKeyDown}\n              />\n              <Button\n                style={{ width: '100%' }}\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick= {sendMessage}\n              >\n                Send Message\n              </Button>\n            </StyledSendMessage>\n          </StyledChat>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default chatbox;\n","import { useForkRef } from '@material-ui/core';\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport io from 'socket.io-client';\nimport { AuthContext } from '../App';\nimport Chatbox from '../components/Chatbox/Chatbox';\nimport { v1 as uuid } from 'uuid';\nimport { useHistory } from 'react-router-dom';\n\n//import axios from 'axios';\n\nconst Chat = () => {\n  const history = useHistory();\n  const [users, setUsers] = useState([]);\n  const { authState } = useContext(AuthContext);\n  const sendChannel = useRef();\n  const socket = useRef();\n  const peerRef = useRef();\n  const otherUser = useRef();\n  const otherUserName = useRef();\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n  const myID = useRef();\n\n  useEffect(() => {\n    socket.current = io('/', {\n      transports: ['websocket', 'polling']\n    });\n\n    socket.current.on('connect', () => {\n      myID.current = socket.current.id;\n      socket.current.emit('username', authState.username);\n    });\n\n    socket.current.on('users', users => {\n      setUsers(users);\n      console.log(users);\n    });\n\n    socket.current.on('connected', user => {\n      console.log(user.name + ' conneceted');\n    });\n\n    socket.current.on('disconnected', id => {\n      console.log(\"disconnected:\" + id);\n      if(otherUser.current == id) {\n        socket.current.emit('forlat', socket.current.id);\n      }\n      setUsers(users => {\n        return users.filter(user => user.id !== id);\n      });\n    });\n\n    socket.current.on('romInvitasjon', romInfo => {\n      setRoom(romInfo.romID, romInfo.from, romInfo.name);\n    });\n\n    socket.current.on('akseptert', id => {\n      akseptertRom(id);\n    });\n\n    socket.current.on('forlot', tilbakeStill);\n\n    socket.current.on('avslaatt', giAvslaattBeskjed);\n\n    socket.current.on('offer', handleOffer);\n\n    socket.current.on('answer', handleAnswer);\n\n    socket.current.on('ice-candidate', handleNewICECandidateMsg);\n  }, []);\n\n  const onUserClick = toUser => {\n    if (toUser.id !== socket.current.id) {\n      otherUser.current = toUser.id;\n      console.log('USER CLCKED', toUser);\n      let romID = createRoom();\n      const romInfo = {\n        target: toUser.id,\n        from: socket.current.id,\n        romID: romID,\n        name: authState.username\n      };\n      socket.current.emit('roomID', romInfo);\n    } else {\n      console.log('Du kan ikke snakke med deg selv');\n    }\n  };\n\n  function tilbakeStill() {\n    setMessages([]);\n    history.push('/chat');\n    otherUser.current = null;\n    alert(otherUserName.current + \" forlot samtalen\");\n    otherUserName.current = null;\n  }\n  function giAvslaattBeskjed() {\n    alert(\"Kunne ikke akseptere\")\n  }\n\n  function createRoom() {\n    const id = uuid();\n    return id;\n  }\n\n  function akseptertRom(id) {\n    history.push(`/chat/${id}`);\n  }\n\n  function setRoom(id, from, name) {\n    try {\n    //Får problemer med window.confirm i chrome pga. adblock\n    otherUserName.current = name;\n    let vilSnakke = window.confirm(otherUserName.current + ' vil snakke med deg!\\nTrykk OK for å godta, og Avbryt for å avslå');\n    if (vilSnakke) {\n      if(otherUser.current != null) {\n        socket.current.emit('forlat', otherUser.current);\n      }\n      otherUser.current = from;\n      history.push(`/chat/${id}`);\n      startSamtale(from);\n      let svar = {\n        id: id,\n        from: from\n      };\n      socket.current.emit('akseptert', svar);\n    } else if (!vilSnakke) {\n      socket.current.emit('avslaa', from);\n    } else {\n      console.log(\"Noe gikk galt\")\n    }\n  } catch(e) {\n    console.log(e.message);\n  }\n  }\n\n  function startSamtale(userID) {\n    setMessages([])\n    peerRef.current = createPeer(userID);\n    sendChannel.current = peerRef.current.createDataChannel('sendChannel');\n    sendChannel.current.onopen = handleOnOpen;\n    sendChannel.current.onmessage = handleReceiveMessage;\n  }\n\n  function handleOnOpen() {\n    console.log('onopen');\n  }\n\n  function createPeer(userID) {\n    const peer = new RTCPeerConnection({\n      iceServers: [\n        {\n          urls: 'stun:chatroulette123-stun.herokuapp'\n        }\n      ]\n    });\n    peer.onicecandidate = handleICECandidateEvent;\n    peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n    return peer;\n  }\n\n  function handleReceiveMessage(e) {\n    setMessages(messages => [...messages, { yours: false, value: e.data }]);\n  }\n\n  function sendMessage() {\n    if (text.length) {\n      sendChannel.current.send(text);\n      setMessages(messages => [...messages, { yours: true, value: text }]);\n      setText('');\n    }\n    setTimeout(() => {\n      document.getElementById(\"hei\").scrollTop = document.getElementById(\"hei\").scrollHeight \n    }, 1);\n  }\n\n  function handleNegotiationNeededEvent(userID) {\n    peerRef.current\n      .createOffer()\n      .then(offer => {\n        return peerRef.current.setLocalDescription(offer);\n      })\n      .then(() => {\n        const payload = {\n          target: userID,\n          caller: socket.current.id,\n          sdp: peerRef.current.localDescription\n        };\n        socket.current.emit('offer', payload);\n      })\n      .catch(e => console.log(e));\n  }\n\n  function handleOffer(incoming) {\n    peerRef.current = createPeer();\n    peerRef.current.ondatachannel = event => {\n      sendChannel.current = event.channel;\n      sendChannel.current.onopen = handleOnOpen;\n      sendChannel.current.onmessage = handleReceiveMessage;\n    };\n    const desc = new RTCSessionDescription(incoming.sdp);\n    peerRef.current\n      .setRemoteDescription(desc)\n      .then(() => {})\n      .then(() => {\n        return peerRef.current.createAnswer();\n      })\n      .then(answer => {\n        return peerRef.current.setLocalDescription(answer);\n      })\n      .then(() => {\n        const payload = {\n          target: incoming.caller,\n          caller: socket.current.id,\n          sdp: peerRef.current.localDescription\n        };\n        socket.current.emit('answer', payload);\n      });\n  }\n\n  function handleAnswer(message) {\n    const desc = new RTCSessionDescription(message.sdp);\n    peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n  }\n\n  function handleICECandidateEvent(e) {\n    if (e.candidate) {\n      const payload = {\n        target: otherUser.current,\n        candidate: e.candidate\n      };\n      socket.current.emit('ice-candidate', payload);\n    }\n  }\n\n  function handleNewICECandidateMsg(incoming) {\n    const candidate = new RTCIceCandidate(incoming);\n    peerRef.current.addIceCandidate(candidate).catch(e => console.log(e));\n  }\n\n  function handleChange(e) {\n    setText(e.target.value);\n  }\n\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      sendMessage();\n    }\n  };\n\n  return (\n    <Chatbox\n      users={users}\n      messages={messages}\n      text={text}\n      onUserClick={user => onUserClick(user)}\n      handleChange={e => handleChange(e)}\n      sendMessage={sendMessage}\n      onKeyDown={onKeyDown}\n      otherUser={otherUser.current}\n      myID= {myID.current}\n    />\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './containers/Login';\nimport Chat from './containers/Chat';\n\nexport default (\n  <Switch>\n    <Route exact path=\"/\" component={Login} />\n    <Route exact path=\"/chat\" component={Chat} />\n    <Route exact path=\"/chat/:roomID\" component={Chat} />\n  </Switch>\n);\n","import React , { useState, createContext }from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Routes from './Routes';\n\nexport const AuthContext = createContext({\n  authState: null,\n  setAuthState: () => {}\n  });\n\nfunction App() {\n  const [authState, setAuthState] = useState({username: null}); \n\n  return (\n    <BrowserRouter >\n      <div className=\"App\">\n        <AuthContext.Provider value={{authState, setAuthState}}>{Routes}</AuthContext.Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}